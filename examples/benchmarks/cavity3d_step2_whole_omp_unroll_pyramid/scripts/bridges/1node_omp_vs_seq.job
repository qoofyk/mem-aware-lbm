#!/bin/bash
#SBATCH --job-name="perf"
#SBATCH --output="results/1node.perf.%j.out"
#SBATCH --partition=RM
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=28
#SBATCH -t 1:0:00
#SBATCH --export=ALL

# mail alert at start, end and abortion of execution
#SBATCH --mail-type=ALL
# send mail to this address
#SBATCH --mail-user=qoofyk@gmail.com

module load intel/19.5
module load vtune

which mpirun
mkdir -pv results
PBS_O_HOME=$HOME
PBS_O_WORKDIR=$(pwd)
omp_bin=$PBS_O_WORKDIR/cavity3d_step2
seq_bin=$HOME/mem-aware-lbm/examples/benchmarks/cavity3d/cavity3d
export SCRATCH_DIR=${SCRATCH}/mem-aware-lbm/${SLURM_JOBID}
mkdir -pv ${SCRATCH_DIR}/omp
mkdir -pv ${SCRATCH_DIR}/seq
omp_path=${SCRATCH_DIR}/omp
seq_path=${SCRATCH_DIR}/seq

# bridges
groupname=$(id -Gn)
EMPTY_DIR=${SCRATCH}/empty/

# dim=$((114 + 2))
# steps=150
# block_size=0
# warmup_steps=40

dim=$((336 + 2))
steps=50
block_size=0
warmup_steps=20

#export KMP_AFFINITY=granularity=core,scatter
echo "KMP_AFFINITY = $KMP_AFFINITY"

# threads=(1 2 4 8 14 16 28)
threads=(1)

for ((k=0; k<${#threads[@]}; k++)); do
    export OMP_NUM_THREADS=${threads[k]}

    echo "1. collect hpc"
    mpirun -np 1 amplxe-cl -result-dir ${omp_path}/hpc${OMP_NUM_THREADS} -quiet -collect hpc-performance -data-limit=0 $omp_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "2. collect hotspot"
    mpirun -np 1 amplxe-cl -result-dir ${omp_path}/hotspot${OMP_NUM_THREADS} -quiet -collect hotspots -data-limit=0 $omp_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "3. collect snapshot"
    mpirun -np 1 aps -result-dir ${omp_path}/snapshot${OMP_NUM_THREADS} $omp_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "4. collect memory-access with openmp=true"
    mpirun -np 1 amplxe-cl -result-dir ${omp_path}/mem${OMP_NUM_THREADS} -quiet -collect memory-access -knob analyze-openmp=true -data-limit=0 $omp_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "5. collect memory-access with analysze-dynamic-mem-obj=true"
    mpirun -np 1 amplxe-cl -result-dir ${omp_path}/mem-dynamic-alloc-${OMP_NUM_THREADS} -quiet -collect memory-access -knob analyze-mem-objects=true -data-limit=0 $omp_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "6. collect uarch-exploration with collect-memory-bandwidth=true"
    mpirun -np 1 amplxe-cl -result-dir ${omp_path}/uarch${OMP_NUM_THREADS} -quiet -collect uarch-exploration -knob collect-memory-bandwidth=true -data-limit=0 $omp_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "7. report hw-events from uarch"
    amplxe-cl -report hw-events -quiet -result-dir ${omp_path}/uarch${OMP_NUM_THREADS} -report-output hw-events${OMP_NUM_THREADS}.csv -format csv -csv-delimiter comma
    echo "============================================"
    echo

    echo "8. report top-down from uarch"
    amplxe-cl -report top-down -quiet -result-dir ${omp_path}/uarch${OMP_NUM_THREADS} -report-output top-down${OMP_NUM_THREADS}.csv -format csv -csv-delimiter comma
    echo "============================================"
    echo

    echo "9. report summary from uarch"
    amplxe-cl -report summary -quiet -result-dir ${omp_path}/uarch${OMP_NUM_THREADS} -report-output summary${OMP_NUM_THREADS}.csv -format csv -csv-delimiter comma
    echo "============================================"
    echo

    echo "10. collect page fault"
    mpirun -np 1 amplxe-cl -collect system-overview -quiet -result-dir ${omp_path}/sys-overview${OMP_NUM_THREADS} -data-limit=0 $omp_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

done

cd ${omp_path}
for i in "${threads[@]}"
do
    aps-report snapshot${i} -O snapshot${i}.html
done

echo "------------------------------------------------------"
echo "perf on seq"
for ((k=0; k<${#threads[@]}; k++)); do

    echo "1. collect hpc"
    mpirun -np 1 amplxe-cl -result-dir ${seq_path}/hpc${OMP_NUM_THREADS} -quiet -collect hpc-performance -data-limit=0 $seq_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "2. collect hotspot"
    mpirun -np 1 amplxe-cl -result-dir ${seq_path}/hotspot${OMP_NUM_THREADS} -quiet -collect hotspots -data-limit=0 $seq_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "3. collect snapshot"
    mpirun -np 1 aps -result-dir ${seq_path}/snapshot${OMP_NUM_THREADS} $seq_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "4. collect memory-access with openmp=true"
    mpirun -np 1 amplxe-cl -result-dir ${seq_path}/mem${OMP_NUM_THREADS} -quiet -collect memory-access -knob analyze-openmp=true -data-limit=0 $seq_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "5. collect memory-access with analysze-dynamic-mem-obj=true"
    mpirun -np 1 amplxe-cl -result-dir ${seq_path}/mem-dynamic-alloc-${OMP_NUM_THREADS} -quiet -collect memory-access -knob analyze-mem-objects=true -data-limit=0 $seq_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "6. collect uarch-exploration with collect-memory-bandwidth=true"
    mpirun -np 1 amplxe-cl -result-dir ${seq_path}/uarch${OMP_NUM_THREADS} -quiet -collect uarch-exploration -knob collect-memory-bandwidth=true -data-limit=0 $seq_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

    echo "7. report hw-events from uarch"
    amplxe-cl -report hw-events -quiet -result-dir ${seq_path}/uarch${OMP_NUM_THREADS} -report-output hw-events${OMP_NUM_THREADS}.csv -format csv -csv-delimiter comma
    echo "============================================"
    echo

    echo "8. report top-down from uarch"
    amplxe-cl -report top-down -quiet -result-dir ${seq_path}/uarch${OMP_NUM_THREADS} -report-output top-down${OMP_NUM_THREADS}.csv -format csv -csv-delimiter comma
    echo "============================================"
    echo

    echo "9. report summary from uarch"
    amplxe-cl -report summary -quiet -result-dir ${seq_path}/uarch${OMP_NUM_THREADS} -report-output summary${OMP_NUM_THREADS}.csv -format csv -csv-delimiter comma
    echo "============================================"
    echo

    echo "10. collect page fault"
    mpirun -np 1 amplxe-cl -collect system-overview -quiet -result-dir ${seq_path}/sys-overview${OMP_NUM_THREADS} -data-limit=0 $seq_bin $dim $steps $block_size $warmup_steps
    echo "============================================"
    echo

done

cd ${seq_path}
for i in "${threads[@]}"
do
    aps-report snapshot${i} -O snapshot${i}.html
done
